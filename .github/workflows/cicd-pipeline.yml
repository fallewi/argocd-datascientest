name: CI/CD - Pipeline de Déploiement de l'Application Web

on:
  push:
    branches: [ "master" ]
    paths:
      - 'app/**'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.generate_tag.outputs.tag }}

    steps:
      - name: 1. Récupération du code source
        uses: actions/checkout@v4

      - name: 2. Génération d'un tag unique pour l'image
        id: generate_tag
        run: echo "tag=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_OUTPUT

      - name: 3. Configuration de Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 4. Connexion à Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 5. Build de l'image Docker
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./app/Dockerfile
          push: false
          tags: datascientestuser/webapp:${{ steps.generate_tag.outputs.tag }}
          load: true

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 1. Lancement des tests (Simulation)
        run: |
          echo "Lancement des tests unitaires et d'intégration..."
          echo "Tests passés avec succès !"

  scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 1. Scan de vulnérabilités avec Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'datascientestuser/webapp:${{ needs.build.outputs.image_tag }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  push:
    runs-on: ubuntu-latest
    needs: scan
    if: success()

    steps:
      - name: 1. Push de l'image sur Docker Hub
        run: |
          docker push datascientestuser/webapp:latest
          docker push datascientestuser/webapp:${{ needs.build.outputs.image_tag }}

  trigger-argocd-sync:
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: 1. Checkout du dépôt de Configuration (GitOps)
        uses: actions/checkout@v4
        with:
          repository: nzapanarcisse/datascientest-chart
          token: ${{ secrets.GITOPS_PAT }}

      - name: 2. Mise à jour du tag de l'image dans le chart Helm
        run: |
          sed -i "s/^  tag: .*/  tag: ${{ needs.build.outputs.image_tag }} /" webapp/webapp-chart/values.yaml

      - name: 3. Commit et Push des changements vers le dépôt GitOps
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add webapp/webapp-chart/values.yaml
          git diff --staged --quiet || git commit -m "CI: Mise à jour de l'image webapp vers le tag ${{ needs.build.outputs.image_tag }}"
          git push